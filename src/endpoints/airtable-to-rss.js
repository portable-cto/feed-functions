const express = require('express');
const router = new express.Router();
const fetch = require('node-fetch');
const {Feed} = require('feed');
const querystring = require('querystring');
const logger = require("logops");

const getAirtableUrl = (query) => {
  return 'https://api.airtable.com/v0/' +
    query.baseId + '/' +
    query.table + '?' +
    querystring.stringify({
      api_key: query.api_key,
      maxRecords: '20',
      view: query.view,
      sort: query.sort || [{field: "created", direction: "desc"}]
    });
};

router.get('/', function (req, res, next) {
  if (!(
    req.query.api_key &&
    req.query.baseId &&
    req.query.table &&
    req.query.view
  )) {
    next('Missing required parameter(s). Please check: api_key, baseId, table, view');
  }

  // Generate Airtable URL
  const airtableUrl = getAirtableUrl(req.query);
  const fullUrl = req.protocol + '://' + req.get('host') + '/airtable-to-rss';

  // Generate new feed
  const feed = new Feed({
    title: 'Airtable to RSS',
    description: 'RSS Feed Generated by Airtable',
    generator: fullUrl,
    link: fullUrl,
  });

  // Get items from Airtable
  fetch(airtableUrl)
    .then((raw => raw.json()))
    .then(results => {
      results.records.forEach(record => {

        // Add each item to feed
        feed.addItem({
          title: record.fields.title,
          id: record.id,
          link: record.fields.url,
          description: record.fields.description,
          author: [{name: record.fields.name}],
          date: new Date(record.fields.created),
          image: record.fields.image ? record.fields.image[0].url : undefined,
        });
      });

      res.writeHead(200, {'Content-Type': 'application/xml'});
      res.end(feed.rss2());
    }).catch(error => {
      logger.error(error);
      next(error);
    });
});

module.exports = router;
